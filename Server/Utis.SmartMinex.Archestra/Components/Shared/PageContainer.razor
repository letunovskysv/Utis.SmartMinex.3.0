@*--------------------------------------------------------------------------------------------------
// (С) 2017-2025 ООО УралТехИС. Интеллектуальная Системная Платформа 3.0. Все права защищены.
// Описание: PageContainer – Контейнер для страниц отображаемых на вкладках.
// https://learn.microsoft.com/ru-ru/aspnet/core/blazor/components/dynamiccomponent?view=aspnetcore-8.0
// https://github.com/biosh0KEd/Dynamic-Tab-Pages-Using-DevExpress-Blazor/tree/main
//------------------------------------------------------------------------------------------------*@
@page "/"
@inject SessionData _session

<div>
    <div class="ut-actions-bar">
        <ui-button title="Скрыть боковое меню">
            <svg class="ut-glyph-box" viewBox="0 0 115.1376953125 89.9912109375" xmlns="http://www.w3.org/2000/svg" style="overflow: visible; height: 14.6878px; width: 18.792px;">
                <g transform="matrix(1 0 0 1 -12.451118164062564 80.2255859375)">
                    <path d="M27.7832 9.76562L112.256 9.76562C122.51 9.76562 127.588 4.6875 127.588-5.37109L127.588-64.9902C127.588-75.0488 122.51-80.127 112.256-80.127L27.7832-80.127C17.5781-80.127 12.4512-75.0977 12.4512-64.9902L12.4512-5.37109C12.4512 4.73633 17.5781 9.76562 27.7832 9.76562ZM27.8809 1.9043C22.998 1.9043 20.3125-0.683594 20.3125-5.76172L20.3125-64.5996C20.3125-69.6777 22.998-72.2656 27.8809-72.2656L49.6582-72.2656L49.6582 1.9043ZM112.158-72.2656C116.992-72.2656 119.727-69.6777 119.727-64.5996L119.727-5.76172C119.727-0.683594 116.992 1.9043 112.158 1.9043L57.3242 1.9043L57.3242-72.2656ZM40.2832-54.1504C41.748-54.1504 43.0664-55.4688 43.0664-56.8848C43.0664-58.3496 41.748-59.6191 40.2832-59.6191L29.7852-59.6191C28.3203-59.6191 27.0508-58.3496 27.0508-56.8848C27.0508-55.4688 28.3203-54.1504 29.7852-54.1504ZM40.2832-41.5039C41.748-41.5039 43.0664-42.8223 43.0664-44.2871C43.0664-45.752 41.748-46.9727 40.2832-46.9727L29.7852-46.9727C28.3203-46.9727 27.0508-45.752 27.0508-44.2871C27.0508-42.8223 28.3203-41.5039 29.7852-41.5039ZM40.2832-28.9062C41.748-28.9062 43.0664-30.127 43.0664-31.5918C43.0664-33.0566 41.748-34.3262 40.2832-34.3262L29.7852-34.3262C28.3203-34.3262 27.0508-33.0566 27.0508-31.5918C27.0508-30.127 28.3203-28.9062 29.7852-28.9062Z" />
                </g>
            </svg>
        </ui-button>
    </div>
    <div>
        <ul class="ut-tabs-label">
            @foreach(var tab in _paginas)
            {
                <li class=@(tab.Id == _activePage ? "select" : string.Empty) @onclick=@(() => OnTabClick(tab))>
                    @if (!string.IsNullOrEmpty(tab.Icon)) { <img class="ut-tabs-img" src="images/@(tab.Icon)" />} @tab.Name <div class="icon-clear" title="Закрыть вкладку" @onclick=@(() => OnCloseTab(tab.Id))></div>
                </li>
            }
        </ul>
    </div>
    <div class="ut-tabs-page">
        <CascadingValue Value="this">
            @foreach (var pag in _paginas)
            {
                <div style=@("display:" + (pag.Id == _activePage ? "inherit" : "none"))>
                    <DynamicComponent Type=pag.Type Parameters=pag.Parameters />
                </div>
            }
        </CascadingValue>
    </div>
</div>

@code {
    #pragma warning disable BL0007, 8604

    List<TabPageItem> _paginas = [HomePage.Default];
    int _activePage;
    bool _suppressClick;

    public Task SetTitleAsync(string? title)
    {
        if (title != null && TryGetPage(_activePage, out var page))
        {
            page.Name = title;
            StateHasChanged();
        }
        return Task.CompletedTask;
    }

    protected override Task OnParametersSetAsync()
    {
        _activePage = _paginas.First().Id;
        _session.SessionChanged += OnSessionChanged;
        return base.OnParametersSetAsync();
    }

    Task OnTabClick(TabPageItem page)
    {
        if (!_suppressClick)
        {
            _activePage = page.Id;
            StateHasChanged();
        }
        _suppressClick = false;
        return Task.CompletedTask;
    }

    void OnSessionChanged(object? sender, SessionDataEventArgs e)
    {
        var exist = _paginas.FirstOrDefault(p => p.Type == e.Page.Type && p.Parameters.First().Value.Equals(e.Page.Parameters.First().Value));
        if (exist == null)
        {
            _paginas.Add(e.Page);
            _activePage = e.Page.Id;
        }
        else
            _activePage = exist.Id;

        StateHasChanged();
    }

    /// <summary> Динамический рендер компонента.</summary>
    public static RenderFragment Render(Type type, params object[] args) => __builder =>
    {
        __builder.OpenComponent(0, type);
        for (int i = 0; i < args.Length; i += 2)
            __builder.AddAttribute(i / 2, args[i].ToString(), args[i + 1]);

        __builder.CloseComponent();
    };

    Task OnCloseTab(int idPage)
    {
        if (TryGetPage(_activePage, out var page))
        {
            if (page.Id == _activePage)
                _activePage = _paginas.Last().Id == page.Id
                    ? _paginas.Skip(_paginas.Count - 2).First().Id
                    : _paginas.SkipWhile(p => p.Id != page.Id).Skip(1).First().Id;

            _paginas.Remove(page);
            _suppressClick = true;
        }
        return Task.CompletedTask;
    }

    bool TryGetPage(int idPage, out TabPageItem page)
    {
        if (_paginas.FirstOrDefault(p => p.Id == idPage) is TabPageItem p)
        {
            page = p;
            return true;
        }
        page = default!;
        return false;
    }


#pragma warning restore BL0007, 8604
}
